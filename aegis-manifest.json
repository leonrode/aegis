{
    "name": "aegis",
    "version": "0.1.0",
    "servers": {
        "google-calendar": {
            "io": "stdio", 
            "control_prompt": "You are an intelligent agent that has access to a user's Google Calendar. Your goal is to help the user manage their schedule by translating their natural language requests into one or more tool calls.\n\n***\n## ## General Instructions\n\n* Current Time: Always use the get-current-date tool to establish the current date and time before processing any time-related requests. This ensures your knowledge is up-to-date.\n* Timezone Awareness: Use the get-timezone-info tool if the user's query implies a need for timezone awareness (e.g., scheduling with people in different locations). By default, assume all times are in the user's current timezone.\n* Sequential Logic: Think step-by-step. Complex requests may require multiple tool calls. For instance, to update an event, you may first need to find the event's ID. To check if someone is free, you may first need to get their calendar ID.\n* Resource IDs: Many tools require a calendarId or an eventId. These IDs are not known by the user. You must devise a plan to get these IDs first. If a user says \"my calendar\" or \"my primary calendar,\" you can use the special string \"primary\" as the calendarId.\n* Be Proactive: If a user's request is ambiguous, ask clarifying questions before acting. If you can't find a specific event or calendar, inform the user and present them with a list of options.\n\n***\n## ## Tool Usage and Information Paths\n\nHere is a map of the tools and the most efficient way to use them to fulfill user requests.\n\n### ### üó∫Ô∏è Information Map & Paths\n\n#### 1. Listing Resources (The Starting Point)\n\nIf you need to find an ID for a calendar or an event, start here.\n\n* list-calendars: Use this as your first step whenever a user refers to a calendar other than their \"primary\" one (e.g., \"the team calendar,\" \"my personal calendar\"). This tool will give you a list of all calendars the user has access to, each with its name and id.\n* get-events: Once you have a calendarId (either \"primary\" or from list-calendars), use this tool to find events. You can search by time range (timeMin, timeMax) or by keyword (q parameter, not explicitly in the JSON but can be inferred from context). The result of this call will give you the crucial eventId for each event, which is required for updating or deleting them.\n\n#### 2. Core Actions (Reading & Writing)\n\nOnce you have the necessary IDs, you can perform core actions.\n\n* create-event: Use this to add a new event to a calendar.\n    * Path: Requires calendarId. If the user just says \"my calendar,\" use \"primary\". Otherwise, you may need to call list-calendars first.\n    * Hint: For complex events with attendees or conference data, build the full JSON object. For simple requests like \"Schedule lunch with Bob tomorrow at noon,\" you only need to provide the required fields: calendarId, summary, start_datetime, and end_datetime.\n* update-event: Use this to modify an existing event.\n    * Path: Requires both calendarId and eventId. This almost always means you must call get-events first to find the specific eventId for the event the user wants to change (e.g., \"change my lunch meeting tomorrow to 1 PM\").\n* delete-event: Use this to remove an event.\n    * Path: Just like update-event, this requires calendarId and eventId. You must use get-events first to find the eventId.\n\n#### 3. Utility & Advanced Functions\n\nThese tools help with more complex queries and context-gathering.\n\n* check-availability: Use this to find free/busy times for one or more people.\n    * Path: This tool takes a list of calendar IDs in its items array. To check the availability of other people, you will first need their calendar IDs. Assume their calendar ID is their email address (e.g., bob@gmail.com). For the user themselves, use \"primary\".\n    * Example Plan: To \"find a time for me and Bob to meet tomorrow,\" first call check-availability with items: [{\"id\": \"primary\"}, {\"id\": \"bob@gmail.com\"}] for the relevant time range. Then, use the returned free slots to suggest a time and call create-event.\n* get-current-date & get-timezone-info: Use these at the beginning of any complex, time-sensitive query to ground your response in the correct temporal and geographical context.",
            "startup": ["python3", "-m", "local-mcp-test.mcp-google-calendar.mcp_server_google_calendar"],
            "cwd": "",
            "auth": true,
            "tools": [
                {
                    "name": "get-events",
                    "description": "Get events from calendar",
                    "params": {
                        "type": "object",
                        "properties": {
                            "calendarId": {
                                "type": "string",
                                "description": "The ID of the calendar to get events from"
                            },
                            "timeMin": {
                                "type": "string",
                                "description": "The minimum time to get events from"
                            },
                            "timeMax": {
                                "type": "string",
                                "description": "The maximum time to get events from"
                            },
                            "maxResults": {
                                "type": "number",
                                "description": "The maximum number of events to return"
                            },
                            "singleEvents": {
                                "type": "boolean",
                                "description": "Whether to expand recurring events into instances"
                            },
                            "orderBy": {
                                "type": "string",
                                "description": "The order of the events returned",
                                "enum": ["startTime", "updated"]
                            }
                        },
                        "required": ["calendarId"]
                    }
                },
                {
                    "name": "list-calendars",
                    "description": "List all calendars"
                },
                {
                    "name": "get-timezone-info",
                    "description": "Get the current timezone information from Google Calendar"
                },
                {
                    "name": "get-current-date",
                    "description": "Get the current date and time in the user's timezone. Useful for models that may have outdated knowledge of the current date."
                },
                {
                    "name": "check-availability",
                    "description": "Check availability for yourself and/or others. When checking for other people in the organization, their emails will always be their name and then @gmail.com",
                    "params": {
                        "type": "object",
                        "properties": {
                            "calendarExpansionMax": {
                                "type": "number",
                                "description": "Maximal number of calendars for which FreeBusy information is to be provided. Optional. Maximum value is 50."
                            },
                            "groupExpansionMax": {
                                "type": "number",
                                "description": "Maximal number of calendar identifiers to be provided for a single group. Optional. An error is returned for a group with more members than this value. Maximum value is 100."
                            },
                            "items": {
                                "type": "array",
                                "description": "List of calendars and/or groups to query for FreeBusy information. Optional.",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "The identifier of a calendar or a group."
                                        }
                                    }
                                }
                            },
                            "timeMax": {
                                "type": "string",
                                "description": "The end of the interval for the query formatted as per RFC3339."
                            },
                            "timeMin": {
                                "type": "string",
                                "description": "The start of the interval for the query formatted as per RFC3339."
                            },
                            "timeZone": {
                                "type": "string",
                                "description": "Time zone used in the response. Optional. The default is UTC."
                            }
                        }
                    }
                },
                {
                    "name": "create-event",
                    "description": "Create an event in Google Calendar. Supports both simple and complex events with all advanced features.",
                    "params": {
                        "type": "object",
                        "properties": {
                            "calendarId": {
                                "type": "string",
                                "description": "The ID of the calendar to create the event in. Use 'primary' for the user's primary calendar."
                            },
                            "summary": {
                                "type": "string",
                                "description": "Title of the event"
                            },
                            "description": {
                                "type": "string",
                                "description": "Description of the event. Can contain HTML."
                            },
                            "location": {
                                "type": "string",
                                "description": "Geographic location of the event as free-form text"
                            },
                            "colorId": {
                                "type": "string",
                                "description": "The color of the event. See the Calendar UI for the list of available colors."
                            },
                            "start_datetime": {
                                "type": "string",
                                "description": "Start time (YYYY-MM-DDTHH:MM:SS format or RFC3339)"
                            },
                            "end_datetime": {
                                "type": "string",
                                "description": "End time (YYYY-MM-DDTHH:MM:SS format or RFC3339)"
                            },
                            "timezone": {
                                "type": "string",
                                "description": "Timezone for the event (optional, auto-detected if not provided)"
                            },
                            "recurrence": {
                                "type": "array",
                                "description": "List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event",
                                "items": {
                                    "type": "string",
                                    "description": "Recurrence rule in iCalendar format (e.g., 'RRULE:FREQ=WEEKLY;COUNT=10;BYDAY=TU')"
                                }
                            },
                            "attendees": {
                                "type": "array",
                                "description": "The attendees of the event",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "email": {
                                            "type": "string",
                                            "description": "The attendee's email address"
                                        },
                                        "displayName": {
                                            "type": "string",
                                            "description": "The attendee's name, if available"
                                        },
                                        "optional": {
                                            "type": "boolean",
                                            "description": "Whether this is an optional attendee",
                                            "default": false
                                        },
                                        "responseStatus": {
                                            "type": "string",
                                            "description": "The attendee's response status",
                                            "enum": ["needsAction", "declined", "tentative", "accepted"],
                                            "default": "needsAction"
                                        },
                                        "comment": {
                                            "type": "string",
                                            "description": "The attendee's response comment"
                                        },
                                        "additionalGuests": {
                                            "type": "integer",
                                            "description": "Number of additional guests",
                                            "minimum": 0,
                                            "default": 0
                                        }
                                    },
                                    "required": ["email"]
                                }
                            },
                            "attachments": {
                                "type": "array",
                                "description": "File attachments for the event (Google Drive files only)",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "fileId": {
                                            "type": "string",
                                            "description": "ID of the Google Drive file"
                                        },
                                        "fileUrl": {
                                            "type": "string",
                                            "description": "URL of the file in Google Drive"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "Title of the attachment"
                                        },
                                        "mimeType": {
                                            "type": "string",
                                            "description": "MIME type of the attachment"
                                        }
                                    },
                                    "required": ["fileId"]
                                },
                                "maxItems": 25
                            },
                            "reminders": {
                                "type": "object",
                                "description": "Reminders for the event",
                                "properties": {
                                    "useDefault": {
                                        "type": "boolean",
                                        "description": "Whether to use the default reminders of the calendar",
                                        "default": true
                                    },
                                    "overrides": {
                                        "type": "array",
                                        "description": "Custom reminders for the event",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "method": {
                                                    "type": "string",
                                                    "description": "The method used by this reminder",
                                                    "enum": ["email", "popup"]
                                                },
                                                "minutes": {
                                                    "type": "integer",
                                                    "description": "Number of minutes before the event to trigger the reminder"
                                                }
                                            },
                                            "required": ["method", "minutes"]
                                        }
                                    }
                                }
                            },
                            "visibility": {
                                "type": "string",
                                "description": "Visibility of the event",
                                "enum": ["default", "public", "private", "confidential"],
                                "default": "default"
                            },
                            "transparency": {
                                "type": "string",
                                "description": "Whether the event blocks time on the calendar",
                                "enum": ["opaque", "transparent"],
                                "default": "opaque"
                            },
                            "conferenceData": {
                                "type": "object",
                                "description": "Conference-related information",
                                "properties": {
                                    "createRequest": {
                                        "type": "object",
                                        "description": "Request to create a new conference",
                                        "properties": {
                                            "requestId": {
                                                "type": "string",
                                                "description": "Client-generated unique ID for this request"
                                            },
                                            "conferenceSolutionKey": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "description": "Conference solution type (e.g., 'hangoutsMeet')"
                                                    }
                                                },
                                                "required": ["type"]
                                            }
                                        },
                                        "required": ["requestId"]
                                    }
                                }
                            }
                        },
                        "required": ["calendarId", "summary", "start_datetime", "end_datetime"]
                    }
                },
                {
                    "name": "delete-event",
                    "description": "Delete an event from Google Calendar",
                    "params": {
                        "type": "object",
                        "properties": {
                            "calendarId": {
                                "type": "string",
                                "description": "The ID of the calendar containing the event. Use 'primary' for the user's primary calendar."
                            },
                            "eventId": {
                                "type": "string",
                                "description": "The ID of the event to delete"
                            },
                            "sendUpdates": {
                                "type": "string",
                                "description": "Whether to send notifications about the deletion to all attendees",
                                "enum": ["all", "externalOnly", "none"],
                                "default": "all"
                            }
                        },
                        "required": ["calendarId", "eventId"]
                    }
                },
                {
                    "name": "update-event",
                    "description": "Update an existing event in Google Calendar. All fields are optional - only specify the fields you want to update.",
                    "params": {
                        "type": "object",
                        "properties": {
                            "calendarId": {
                                "type": "string",
                                "description": "The ID of the calendar containing the event. Use 'primary' for the user's primary calendar."
                            },
                            "eventId": {
                                "type": "string",
                                "description": "The ID of the event to update"
                            },
                            "summary": {
                                "type": "string",
                                "description": "New title of the event"
                            },
                            "description": {
                                "type": "string",
                                "description": "New description of the event. Can contain HTML."
                            },
                            "location": {
                                "type": "string",
                                "description": "New location of the event"
                            },
                            "colorId": {
                                "type": "string",
                                "description": "The color of the event"
                            },
                            "start_datetime": {
                                "type": "string",
                                "description": "New start time (YYYY-MM-DDTHH:MM:SS format or RFC3339)"
                            },
                            "end_datetime": {
                                "type": "string",
                                "description": "New end time (YYYY-MM-DDTHH:MM:SS format or RFC3339)"
                            },
                            "timezone": {
                                "type": "string",
                                "description": "Timezone for the event (optional, auto-detected if not provided)"
                            },
                            "attendees": {
                                "type": "array",
                                "description": "List of attendees for the event",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "email": {
                                            "type": "string",
                                            "description": "The attendee's email address"
                                        },
                                        "displayName": {
                                            "type": "string",
                                            "description": "The attendee's name, if available"
                                        },
                                        "optional": {
                                            "type": "boolean",
                                            "description": "Whether this is an optional attendee",
                                            "default": false
                                        },
                                        "responseStatus": {
                                            "type": "string",
                                            "description": "The attendee's response status",
                                            "enum": ["needsAction", "declined", "tentative", "accepted"],
                                            "default": "needsAction"
                                        }
                                    },
                                    "required": ["email"]
                                }
                            },
                            "recurrence": {
                                "type": "array",
                                "description": "List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring event",
                                "items": {
                                    "type": "string",
                                    "description": "Recurrence rule in iCalendar format (e.g., 'RRULE:FREQ=WEEKLY;COUNT=10;BYDAY=TU')"
                                }
                            },
                            "reminders": {
                                "type": "object",
                                "description": "Reminders for the event",
                                "properties": {
                                    "useDefault": {
                                        "type": "boolean",
                                        "description": "Whether to use the default reminders of the calendar",
                                        "default": true
                                    },
                                    "overrides": {
                                        "type": "array",
                                        "description": "Custom reminders for the event",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "method": {
                                                    "type": "string",
                                                    "description": "The method used by this reminder",
                                                    "enum": ["email", "popup"]
                                                },
                                                "minutes": {
                                                    "type": "integer",
                                                    "description": "Number of minutes before the event to trigger the reminder"
                                                }
                                            },
                                            "required": ["method", "minutes"]
                                        }
                                    }
                                }
                            },
                            "visibility": {
                                "type": "string",
                                "description": "Visibility of the event",
                                "enum": ["default", "public", "private", "confidential"],
                                "default": "default"
                            },
                            "transparency": {
                                "type": "string",
                                "description": "Whether the event blocks time on the calendar",
                                "enum": ["opaque", "transparent"],
                                "default": "opaque"
                            },
                            "sendUpdates": {
                                "type": "string",
                                "description": "Whether to send notifications about the update to all attendees",
                                "enum": ["all", "externalOnly", "none"],
                                    "default": "all"
                                }
                            },
                        
                        "required": ["calendarId", "eventId"]
                    }
                }
            ]
        },
        "google-gmail": {
            "io": "stdio", 
            "control_prompt": "You are an intelligent agent that has access to a user's Gmail account. Your primary goal is to help the user manage their emails efficiently by translating their natural language requests into one or more tool calls. Think step-by-step and devise a plan before acting.\n\n## ## Core Principle: Resource IDs\n\nMany tools require an email_id, label_id, filter_id, or folder_id. The user will almost never know these IDs. Your first step in any complex operation is to find the necessary ID. Once you have this ID, you are free to call one or more of the following tools to extract the resource's content.\n\n* To find an email_id: Use get-unread-emails to see recent emails, or use search-emails with a user-provided query (e.g., from sender, subject) to find a specific email.\n* To find a label_id: Use list-labels to get a list of all available labels and their corresponding IDs.\n* To find a folder_id: Use list-folders. (Note: Gmail uses labels for most folder-like functionality).\n* To find a filter_id: Use list-filters.\n\n## ## Common Workflows\n\n* \"Read my latest email from Bob\":\n    1.  Call search-emails with the query from:bob@example.com.\n    2.  Extract the email_id from the search results.\n    3.  Call read-email with that email_id.\n\n* \"Apply the 'Urgent' label to the email about the project launch\":\n    1.  Call list-labels to find the label_id for the \"Urgent\" label.\n    2.  Call search-emails with the query \"project launch\" to find the email_id.\n    3.  Call apply-label with both the email_id and label_id.\n\n* \"Send a thank you note to Jane\":\n    1.  Call send-email with the recipient's email, a subject, and the message body you generate.\n\n* \"Delete all emails from 'spam-sender@example.com'\":\n    1.  Call search-emails with the query from:spam-sender@example.com to get a list of emails and their email_ids.\n    2.  For each email_id in the results, call trash-email.\n\nAlways confirm the action with the user if it is destructive (e.g., deleting multiple emails).",
            "startup": ["python3", "-m", "gmail-mcp.src.gmail.server", "--creds-file-path", "credentials-web.json", "--token-path", "gmail-mcp/token.json"],
            "cwd": "",
            "auth": true,
            "tools": [
                {
                    "name": "send-email",
                    "description": "Send an email to a recipient",
                    "params": {
                        "type": "object",
                        "properties": {
                            "recipient_id": {
                                "type": "string",
                                "description": "The ID of the recipient to send the email to"
                            },
                            "subject": {
                                "type": "string",
                                "description": "The subject of the email"
                            },
                            "message": {
                                "type": "string",
                                "description": "The body of the email"
                            }
                        },
                        "required": ["recipient_id", "subject", "message"]
                    }
                },
                {
                    "name": "get-unread-emails",
                    "description": "Get all unread emails in the user's inbox"
                },
                {
                    "name": "read-email",
                    "description": "Read an email from the user's inbox",
                    "params": {
                        "type": "object",
                        "properties": {
                            "email_id": {
                                "type": "string",
                                "description": "The ID of the email to read"
                            }
                        },
                        "required": ["email_id"]
                    }
                },
                {
                    "name": "open-email",
                    "description": "Open an email from the user's inbox in the browser",
                    "params": {
                        "type": "object",
                        "properties": {
                            "email_id": {
                                "type": "string",
                                "description": "The ID of the email to open in the browser"
                            }
                        },
                        "required": ["email_id"]
                    }
                },
                {
                    "name": "trash-email",
                    "description": "Trash an email from the user's inbox",
                    "params": {
                        "type": "object",
                        "properties": {
                            "email_id": {
                                "type": "string",
                                "description": "The ID of the email to trash"
                            }
                        },
                        "required": ["email_id"]
                    }
                },
                {
                    "name": "mark-email-as-read",
                    "description": "Mark an email as read in the user's inbox",
                    "params": {
                        "type": "object",
                        "properties": {
                            "email_id": {
                                "type": "string",
                                "description": "The ID of the email to mark as read"
                            }
                        },
                        "required": ["email_id"]
                    }
                },
                {
                    "name": "create-draft",
                    "description": "Create a draft email in the user's draft folder",
                    "params": {
                        "type": "object",
                        "properties": {
                            "recipient_id": {
                                "type": "string",
                                "description": "The ID of the recipient to send the email to"
                            },
                            "subject": {
                                "type": "string",
                                "description": "The subject of the email"
                            },
                            "message": {
                                "type": "string",
                                "description": "The body of the email"
                            }
                        },
                        "required": ["recipient_id", "subject", "message"]
                    }
                },
                {
                    "name": "list-drafts",
                    "description": "List all drafts in the user's draft folder"
                },
                {   
                    "name": "list-labels",
                    "description": "List all labels in the user's inbox"
                },
                {
                    "name": "create-label",
                    "description": "Create a new label in the user's inbox",
                    "params": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "The name of the label to create"
                            }
                        },
                        "required": ["name"]
                    }
                },
                {
                    "name": "apply-label",
                    "description": "Apply a label to an email",
                    "params": {
                        "type": "object",
                        "properties": {
                            "email_id": {
                                "type": "string",
                                "description": "The ID of the email to apply the label to"
                            },
                            "label_id": {
                                "type": "string",
                                "description": "The ID of the label to apply"
                            }
                        },
                        "required": ["email_id", "label_id"]
                    }
                },
                {
                    "name": "remove-label",
                    "description": "Remove a label from an email",
                    "params": {
                        "type": "object",
                        "properties": {
                            "email_id": {
                                "type": "string",
                                "description": "The ID of the email to remove the label from"
                            },
                            "label_id": {
                                "type": "string",
                                "description": "The ID of the label to remove"
                            }
                        },
                        "required": ["email_id", "label_id"]
                    }
                },
                {
                    "name": "search-by-label",
                    "description": "Search for emails by label",
                    "params": {
                        "type": "object",
                        "properties": {
                            "label_id": {
                                "type": "string",
                                "description": "The ID of the label to search by"
                            }
                        },
                        "required": ["label_id"]
                    }
                },
                {
                    "name": "list-filters",
                    "description": "List all filters in the user's inbox"
                },
                {
                    "name": "get-filter",
                    "description": "Get a filter by ID",
                    "params": {
                        "type": "object",
                        "properties": {
                            "filter_id": {
                                "type": "string",
                                "description": "The ID of the filter to get"
                            }
                        },
                        "required": ["filter_id"]
                    }
                },
                {
                    "name": "create-filter",
                    "description": "Create a new filter in the user's inbox",
                    "params": {
                        "type": "object",
                        "properties": {
                            "from_email": {
                                "type": "string",
                                "description": "The ID of the recipient to send the email to"
                            },
                            "to_email": {
                                "type": "string",
                                "description": "The ID of the recipient to send the email to"
                            },
                            "subject": {
                                "type": "string",
                                "description": "The subject of the email"
                            },
                            "query": {
                                "type": "string",
                                "description": "The query to search for"
                            },
                            "has_attachment": {
                                "type": "boolean",
                                "description": "Whether the email has an attachment"
                            },
                            "exclude_chats": {
                                "type": "boolean",
                                "description": "Whether to exclude chats"
                            },
                            "size_comparison": {
                                "type": "string",
                                "description": "The size comparison to search for"
                            },
                            "size": {
                                "type": "integer",
                                "description": "The size of the email"
                            },
                            "add_label_ids": {
                                "type": "array",
                                "description": "The labels to add to the email"
                            },
                            "remove_label_ids": {
                                "type": "array",
                                "description": "The labels to remove from the email"
                            },
                            "forward_to": {
                                "type": "string",
                                "description": "The email to forward the email to"
                            }
                        }
                    },
                    "anyOf": [
                        { "required": ["from_email"] },
                        { "required": ["to_email"] },
                        { "required": ["subject"] },
                        { "required": ["query"] },
                        { "required": ["has_attachment"] },
                        { "required": ["exclude_chats"] },
                        { "required": ["size_comparison"] },
                        { "required": ["size"] },
                        { "required": ["add_label_ids"] },
                        { "required": ["remove_label_ids"] },
                        { "required": ["forward_to"] }
                    ]
                },
                {
                    "name": "delete-filter",
                    "description": "Delete a filter by ID",
                    "params": {
                        "type": "object",
                        "properties": {
                            "filter_id": {
                                "type": "string",
                                "description": "The ID of the filter to delete"
                            }
                        },
                        "required": ["filter_id"]
                    }
                },
                {
                    "name": "search-emails",
                    "description": "Search for emails by query",
                    "params": {
                        "type": "object",
                        "properties": {
                            "query": {
                                "type": "string",
                                "description": "The query to search for"
                            },
                            "max_results": {
                                "type": "integer",
                                "description": "The maximum number of results to return",
                                "default": 50
                            }
                        },
                        "required": ["query"]
                    }
                },
                {
                    "name": "create-folder",
                    "description": "Create a new folder in the user's inbox",
                    "params": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "The name of the folder to create"
                            }
                        },
                        "required": ["name"]
                    }
                },
                {
                    "name": "move-to-folder",
                    "description": "Move an email to a folder",
                    "params": {
                        "type": "object",
                        "properties": {
                            "email_id": {
                                "type": "string",
                                "description": "The ID of the email to move"
                            },
                            "folder_id": {
                                "type": "string",
                                "description": "The ID of the folder to move the email to"
                            }
                        },
                        "required": ["email_id", "folder_id"]
                    }
                },
                {
                    "name": "list-folders",
                    "description": "List all folders in the user's inbox"
                },
                {
                    "name": "rename-label",
                    "description": "Rename a label by ID",
                    "params": {
                        "type": "object",
                        "properties": {
                            "label_id": {
                                "type": "string",
                                "description": "The ID of the label to rename"
                            },
                            "new_name": {
                                "type": "string",
                                "description": "The new name of the label"
                            }
                        },
                        "required": ["label_id", "new_name"]
                    }
                },
                {
                    "name": "delete-label",
                    "description": "Delete a label by ID",
                    "params": {
                        "type": "object",
                        "properties": {
                            "label_id": {
                                "type": "string",
                                "description": "The ID of the label to delete"
                            }
                        },
                        "required": ["label_id"]
                    }
                },
                {
                    "name": "archive-email",
                    "description": "Archive an email by ID",
                    "params": {
                        "type": "object",
                        "properties": {
                            "email_id": {
                                "type": "string",
                                "description": "The ID of the email to archive"
                            }
                        },
                        "required": ["email_id"]
                    }
                },
                {
                    "name": "batch-archive",
                    "description": "Archive a batch of emails by query",
                    "params": {
                        "type": "object",
                        "properties": {
                            "query": {
                                "type": "string",
                                "description": "The query to search for"
                            },
                            "max_emails": {
                                "type": "integer",
                                "description": "The maximum number of emails to archive",
                                "default": 100
                            }
                        },
                        "required": ["query"]
                    }
                },
                {
                    "name": "list-archived",
                    "description": "List all archived emails in the user's inbox",
                    "params": {
                        "type": "object",
                        "properties": {
                            "max_results": {
                                "type": "integer",
                                "description": "The maximum number of results to return",
                                "default": 50
                            }
                        },
                        "required": ["max_results"]
                    }
                },
                {
                    "name": "restore-to-inbox",
                    "description": "Restore an email to the user's inbox",
                    "params": {
                        "type": "object",
                        "properties": {
                            "email_id": {
                                "type": "string",
                                "description": "The ID of the email to restore"
                            }
                        },
                        "required": ["email_id"]
                    }
                }
            ]
        }
    }
}